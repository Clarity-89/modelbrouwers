{"version":3,"sources":["forum.scss","partials/_fonts.scss","partials/_colors.scss","partials/_utils.scss","partials/_pagination.scss","../../node_modules/compass-mixins/lib/compass/css3/_shared.scss","partials/_perfect_scrollbar.scss","../../node_modules/compass-mixins/lib/compass/css3/_transition.scss","partials/forum/_albums.scss","../../node_modules/compass-mixins/lib/compass/css3/_opacity.scss","../../node_modules/compass-mixins/lib/compass/css3/_text-shadow.scss","../../node_modules/compass-mixins/lib/compass/css3/_images.scss","partials/forum/_awards.scss","partials/forum/_builds.scss","partials/forum/_groupbuilds.scss"],"names":[],"mappings":"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","file":"../forum.css","sourcesContent":["/* css file for on the forum */\n@import \"compass\";\n\n@import \"partials/fonts\";\n@import \"partials/colors\";\n@import \"partials/utils\";\n@import \"partials/pagination\";\n@import \"partials/perfect_scrollbar\";\n\n@import \"partials/forum/albums\";\n@import \"partials/forum/awards\";\n@import \"partials/forum/builds\";\n@import \"partials/forum/groupbuilds\";\n","@font-face {\n    font-family: 'SINKIN Medium';\n    src: url('../fonts/sinkinsans-500medium-webfont.eot');\n    src: url('../fonts/sinkinsans-500medium-webfont.eot?#iefix') format('embedded-opentype'),\n         url('../fonts/sinkinsans-500medium-webfont.woff') format('woff'),\n         url('../fonts/sinkinsans-500medium-webfont.ttf') format('truetype'),\n         url('../fonts/sinkinsans-500medium-webfont.svg#sinkin_sans500_medium') format('svg');\n    font-weight: normal;\n    font-style: normal;\n}\n\n$font-header-nav: 'SINKIN Medium', sans-serif;\n","$main-blue: #006699;\n$main-red: #E91D1D;\n$main-green: #32BB5B;\n$main-light-blue: #4095FD;\n$main-pink: #DF4AC5;\n$main-grey: #919291;\n$main-orange: #D46400;\n\n.bg-main-blue       {\n    background-color: $main-blue;\n    &.soft {\n        background-color: rgba($main-blue, 0.7);\n    }\n}\n.bg-main-red        {\n    background-color: $main-red;\n    &.soft {\n        background-color: rgba($main-red, 0.7);\n    }\n}\n.bg-main-green      {\n    background-color: $main-green;\n    &.soft {\n        background-color: rgba($main-green, 0.7);\n    }\n}\n.bg-main-light-blue {\n    background-color: $main-light-blue;\n    &.soft {\n        background-color: rgba($main-light-blue, 0.7);\n    }\n}\n.bg-main-pink       {\n    background-color: $main-pink;\n    &.soft {\n        background-color: rgba($main-pink, 0.7);\n    }\n}\n.bg-main-grey       {\n    background-color: $main-grey;\n    &.soft {\n        background-color: rgba($main-grey, 0.7);\n    }\n}\n.bg-main-orange     {\n    background-color: $main-orange;\n    &.soft {\n        background-color: rgba($main-orange, 0.7);\n    }\n}\n\n$white: #FFFFFF;\n$black: #000000;\n\n/*\n * Navigation bar\n */\n$nav-gradient: linear-gradient(180deg, #ececec, #f8f8f8);\n$nav-gradient-reverse: linear-gradient(0deg, #ececec, #f8f8f8);\n$nav-tab: #e5e5e5;\n$nav-tab-highlight: #fafafa;\n$nav-tab-text: #f4f4f4;\n$nav-tab-text-highlight: #fafafa;\n$broken-white: rgba(255,255,255, 0.5);\n\n/*\n * Main content\n */\n$box-shadow-color: rgba(0,0,0,0.1);\n$text-color: #333333;\n\n/*\n * Borders\n */\n$default-border-color: #CCC;\n","/*\n* Hide the dotted lines around an element when it receives focus.\n*/\n\n* { _noFocusLine: expression(this.hideFocus=true); } /* ie7 */\n::-moz-focus-inner {border:0;}                       /* firefox */\nselect:-moz-focusring {\n    color: transparent;\n    text-shadow: 0 0 0 #000;\n}\n:focus, a:focus {outline:none;}                      /* ie8, chrome, etc */\n\n\n@mixin ellipsis {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n.r {\n  background: url('../images/logo/mb_r.png') no-repeat top right;\n  background-size: 25px 42px;\n}\n\n.relative {\n    position: relative;\n}\n\n\n@mixin bw(){\n  //Internet Explorer 6 - 9\n  filter: gray;\n\n  //Chrome 19+\n  -webkit-filter: grayscale(100%);\n\n  //Firefox 10+\n  filter: url(\"data:image/svg+xml;utf8,<svg xmlns=\\'http://www.w3.org/2000/svg\\'><filter id=\\'grayscale\\'><feColorMatrix type=\\'matrix\\' values=\\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\'/></filter></svg>#grayscale\");\n\n  //Standard\n  filter: grayscale(100%);\n}\n\n@mixin center-vertical() {\n  &:before {\n    content: '';\n    display: inline-block;\n    height: 100%;\n    vertical-align: middle;\n  }\n}\n\n@mixin raised($dp: 1) {\n  @include box-shadow(0 0 $dp*5px 0 rgba($black, 0.4), 0 $dp*5px $dp*7px 0 rgba($black, 0.3));\n}\n\n@mixin text-raised($dp: 1) {\n  @include text-shadow(0 0 $dp*5px 0 rgba($black, 0.4), 0 $dp*5px $dp*7px 0 rgba($black, 0.3));\n}\n\n@mixin menu-feedback() {\n  @include transition(all 1s ease);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: lighten($main-blue, 10);\n    @include box-shadow(0 0 10px rgba($black, 0.1) inset);\n    color: $white;\n  }\n}\n\n// top down\n@mixin text-background() {\n  $gradient: linear-gradient(180deg, rgba(black, .5), rgba(black, .1));\n  @include background($gradient);\n}\n\n\n@mixin selected-fa($color: $main-green, $raise: 1) {\n  & + label + .fa {\n    display: none;\n    position: absolute;\n    top: 5px;\n    right: 0.6em;\n    color: $color;\n    @include text-raised($raise);\n  }\n\n  &:checked + label {\n    @include raised($raise);\n\n    + .fa {\n      display: block;\n    }\n  }\n}\n",".pagination {\n  > .active > a {\n    background-color: $main-green;\n    border-color: $main-green;\n    color: $white;\n  }\n}\n\n// duplicate of bootstrap\n.text-right {\n  text-align: right;\n}\n.text-left {\n  text-align: left;\n}\n.text-center {\n  text-align: center;\n}\n\n.pagination {\n\n  display: inline-block;\n  padding-left: 0;\n  margin: 20px 0;\n  @include border-radius(4px);\n\n  > li {\n    display: inline;\n\n    > a,\n    > span {\n      position: relative;\n      float: left;\n      padding: 6px 12px;\n      margin-left: -1px;\n      line-height: 1.42857143;\n      color: #337ab7;\n      text-decoration: none;\n      background-color: #fff;\n      border: 1px solid #ddd;\n    }\n\n    &:first-child > a,\n    &:first-child > span {\n      margin-left: 0;\n      @include border-top-left-radius(4px);\n      @include border-bottom-left-radius(4px);\n    }\n\n    &:last-child > a,\n    &:last-child > span {\n      @include border-top-right-radius(4px);\n      @include border-bottom-right-radius(4px);\n    }\n  }\n\n  > .disabled > a,\n  > .disabled > span {\n    &,\n    &:focus,\n    &:hover {\n      color: #777;\n      cursor: not-allowed;\n      background-color: #fff;\n      border-color: #ddd;\n    }\n  }\n}\n","@import \"../support\";\n\n// This mixin provides basic support for CSS3 properties and\n// their corresponding experimental CSS2 properties when\n// the implementations are identical except for the property\n// prefix.\n@mixin experimental($property, $value,\n  $moz      : $experimental-support-for-mozilla,\n  $webkit   : $experimental-support-for-webkit,\n  $o        : $experimental-support-for-opera,\n  $ms       : $experimental-support-for-microsoft,\n  $khtml    : $experimental-support-for-khtml,\n  $official : true\n) {\n  @if $webkit  and $experimental-support-for-webkit    { -webkit-#{$property} : $value; }\n  @if $khtml   and $experimental-support-for-khtml     {  -khtml-#{$property} : $value; }\n  @if $moz     and $experimental-support-for-mozilla   {    -moz-#{$property} : $value; }\n  @if $ms      and $experimental-support-for-microsoft {     -ms-#{$property} : $value; }\n  @if $o       and $experimental-support-for-opera     {      -o-#{$property} : $value; }\n  @if $official                                        {         #{$property} : $value; }\n}\n\n// Same as experimental(), but for cases when the property is the same and the value is vendorized\n@mixin experimental-value($property, $value,\n  $moz      : $experimental-support-for-mozilla,\n  $webkit   : $experimental-support-for-webkit,\n  $o        : $experimental-support-for-opera,\n  $ms       : $experimental-support-for-microsoft,\n  $khtml    : $experimental-support-for-khtml,\n  $official : true\n) {\n  @if $webkit  and $experimental-support-for-webkit    { #{$property} : -webkit-#{$value}; }\n  @if $khtml   and $experimental-support-for-khtml     { #{$property} :  -khtml-#{$value}; }\n  @if $moz     and $experimental-support-for-mozilla   { #{$property} :    -moz-#{$value}; }\n  @if $ms      and $experimental-support-for-microsoft { #{$property} :     -ms-#{$value}; }\n  @if $o       and $experimental-support-for-opera     { #{$property} :      -o-#{$value}; }\n  @if $official                                        { #{$property} :         #{$value}; }\n}\n","// Colors\n$ps-rail-hover: $main-blue;\n$ps-bar-default: $main-green;\n$ps-bar-hover: $main-green;\n\n// Scrollbar mixins\n@mixin scrollbar-rail-default {\n  display: none;\n  position: absolute; /* please don't change 'position' */\n  @include border-radius(4px);\n  opacity: 0;\n  @include transition(background-color .2s linear, opacity .2s linear);\n}\n\n@mixin scrollbar-rail-hover {\n  background-color: $ps-rail-hover;\n  opacity: 0.9;\n}\n\n@mixin scrollbar-default {\n  position: absolute; /* please don't change 'position' */\n  background-color: $ps-bar-default;\n  @include border-radius(4px);\n  @include transition(background-color .2s linear);\n}\n\n@mixin scrollbar-hover {\n  background-color: $ps-bar-hover;\n}\n\n@mixin in-scrolling {\n  &.ps-in-scrolling {\n    pointer-events: none;\n    &.ps-x>.ps-scrollbar-x-rail{\n      @include scrollbar-rail-hover;\n      >.ps-scrollbar-x {\n        @include scrollbar-hover;\n      }\n    }\n    &.ps-y>.ps-scrollbar-y-rail {\n      @include scrollbar-rail-hover;\n      >.ps-scrollbar-y {\n        @include scrollbar-hover;\n      }\n    }\n  }\n}\n\n.ps-container {\n  overflow: hidden !important;\n\n  &.ps-active-x > .ps-scrollbar-x-rail,\n  &.ps-active-y > .ps-scrollbar-y-rail {\n    display: block;\n  }\n\n  @include in-scrolling;\n\n  >.ps-scrollbar-x-rail {\n    @include scrollbar-rail-default;\n    bottom: 3px; /* there must be 'bottom' for ps-scrollbar-x-rail */\n    height: 8px;\n\n    >.ps-scrollbar-x {\n      @include scrollbar-default;\n      bottom: 0; /* there must be 'bottom' for ps-scrollbar-x */\n      height: 8px;\n    }\n  }\n\n  >.ps-scrollbar-y-rail {\n    @include scrollbar-rail-default;\n    right: 3px; /* there must be 'right' for ps-scrollbar-y-rail */\n    width: 8px;\n\n    >.ps-scrollbar-y {\n      @include scrollbar-default;\n      right: 0; /* there must be 'right' for ps-scrollbar-y */\n      width: 8px;\n    }\n  }\n\n  &:hover {\n    @include in-scrolling;\n\n    >.ps-scrollbar-x-rail,\n    >.ps-scrollbar-y-rail {\n      opacity: 0.6;\n    }\n\n    >.ps-scrollbar-x-rail:hover {\n      @include scrollbar-rail-hover;\n\n      >.ps-scrollbar-x {\n        @include scrollbar-hover;\n      }\n    }\n\n    >.ps-scrollbar-y-rail:hover {\n      @include scrollbar-rail-hover;\n\n      >.ps-scrollbar-y {\n        @include scrollbar-hover;\n      }\n    }\n  }\n}\n","@import \"shared\";\n\n// CSS Transitions\n// Currently only works in Webkit.\n//\n// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3\n// * We'll be prepared.\n//\n// Including this submodule sets following defaults for the mixins:\n//\n//     $default-transition-property : all\n//     $default-transition-duration : 1s\n//     $default-transition-function : false\n//     $default-transition-delay    : false\n//\n// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).\n\n$default-transition-property: all !default;\n\n$default-transition-duration: 1s !default;\n\n$default-transition-function: false !default;\n\n$default-transition-delay: false !default;\n\n$transitionable-prefixed-values: transform, transform-origin !default;\n\n// One or more properties to transition\n//\n// * for multiple, use a comma-delimited list\n// * also accepts \"all\" or \"none\"\n\n@mixin transition-property($property-1: $default-transition-property,\n  $property-2 : false,\n  $property-3 : false,\n  $property-4 : false,\n  $property-5 : false,\n  $property-6 : false,\n  $property-7 : false,\n  $property-8 : false,\n  $property-9 : false,\n  $property-10: false\n) {\n  @if type-of($property-1) == string { $property-1: unquote($property-1); }\n  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);\n  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }\n  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }\n  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }\n                                                          transition-property : $properties;\n}\n\n// One or more durations in seconds\n//\n// * for multiple, use a comma-delimited list\n// * these durations will affect the properties in the same list position\n\n@mixin transition-duration($duration-1: $default-transition-duration,\n  $duration-2 : false,\n  $duration-3 : false,\n  $duration-4 : false,\n  $duration-5 : false,\n  $duration-6 : false,\n  $duration-7 : false,\n  $duration-8 : false,\n  $duration-9 : false,\n  $duration-10: false\n) {\n  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }\n  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);\n  @include experimental(transition-duration, $durations,\n    -moz, -webkit, -o, not(-ms), not(-khtml), official\n  );\n}\n\n// One or more timing functions\n//\n// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]\n// * For multiple, use a comma-delimited list\n// * These functions will effect the properties in the same list position\n\n@mixin transition-timing-function($function-1: $default-transition-function,\n  $function-2 : false,\n  $function-3 : false,\n  $function-4 : false,\n  $function-5 : false,\n  $function-6 : false,\n  $function-7 : false,\n  $function-8 : false,\n  $function-9 : false,\n  $function-10: false\n) {\n  $function-1: unquote($function-1);\n  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);\n  @include experimental(transition-timing-function, $functions,\n    -moz, -webkit, -o, not(-ms), not(-khtml), official\n  );\n}\n\n// One or more transition-delays in seconds\n//\n// * for multiple, use a comma-delimited list\n// * these delays will effect the properties in the same list position\n\n@mixin transition-delay($delay-1: $default-transition-delay,\n  $delay-2 : false,\n  $delay-3 : false,\n  $delay-4 : false,\n  $delay-5 : false,\n  $delay-6 : false,\n  $delay-7 : false,\n  $delay-8 : false,\n  $delay-9 : false,\n  $delay-10: false\n) {\n  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }\n  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);\n  @include experimental(transition-delay, $delays,\n    -moz, -webkit, -o, not(-ms), not(-khtml), official\n  );\n}\n\n// Transition all-in-one shorthand\n\n@mixin single-transition(\n  $property: $default-transition-property,\n  $duration: $default-transition-duration,\n  $function: $default-transition-function,\n  $delay: $default-transition-delay\n) {\n  @include transition(compact($property $duration $function $delay));\n}\n\n@mixin transition(\n  $transition-1 : default,\n  $transition-2 : false,\n  $transition-3 : false,\n  $transition-4 : false,\n  $transition-5 : false,\n  $transition-6 : false,\n  $transition-7 : false,\n  $transition-8 : false,\n  $transition-9 : false,\n  $transition-10: false\n) {\n  @if $transition-1 == default {\n    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);\n  }\n  $transitions: false;\n  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {\n    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);\n  } @else {\n    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);\n  }\n  $delays: comma-list();\n  $has-delays: false;\n  $webkit-value: comma-list();\n  $moz-value: comma-list();\n  $o-value: comma-list();\n\n  // This block can be made considerably simpler at the point in time that\n  // we no longer need to deal with the differences in how delays are treated.\n  @each $transition in $transitions {\n    // Extract the values from the list\n    // (this would be cleaner if nth took a 3rd argument to provide a default value).\n    $property: nth($transition, 1);\n    $duration: false;\n    $timing-function: false;\n    $delay: false;\n    @if length($transition) > 1 { $duration:        nth($transition, 2); }\n    @if length($transition) > 2 { $timing-function: nth($transition, 3); }\n    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }\n\n    // If a delay is provided without a timing function\n    @if is-time($timing-function) and not($delay) { $delay: $timing-function; $timing-function: false; $has-delays: true; }\n\n    // Keep a list of delays in case one is specified\n    $delays: append($delays, if($delay, $delay, 0s));\n\n    $webkit-value: append($webkit-value, compact((prefixed-for-transition(-webkit, $property) $duration $timing-function)...));\n       $moz-value: append(   $moz-value, compact((prefixed-for-transition(   -moz, $property) $duration $timing-function $delay)...));\n         $o-value: append(     $o-value, compact((prefixed-for-transition(     -o, $property) $duration $timing-function $delay)...));\n  }\n\n  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;\n    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.\n    @if $has-delays                       { -webkit-transition-delay : $delays;       } }\n  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }\n  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }\n                                                          transition : $transitions;\n}\n\n// coerce a list to be comma delimited or make a new, empty comma delimited list.\n@function comma-list($list: ()) {\n  @return join((), $list, comma);\n}\n\n// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.\n@function prefixed-for-transition($prefix, $property) {\n  @if type-of($property) == list {\n    $new-list: comma-list();\n    @each $v in $property {\n      $new-list: append($new-list, prefixed-for-transition($prefix, $v));\n    }\n    @return $new-list;\n  } @else {\n    @if index($transitionable-prefixed-values, $property) {\n      @return #{$prefix}-#{$property};\n    } @else {\n      @return $property;\n    }\n  }\n}\n\n// Checks if the value given is a unit of time.\n@function is-time($value) {\n  @if type-of($value) == number {\n    @return not(not(index(s ms, unit($value))));\n  } @else {\n    @return false;\n  }\n}\n","body.forum {\n\n  $sidebar-width: 20%;\n  $sidebar-bg: rgba($main-blue, 0.87);\n\n  .box-sizing,\n  .box-sizing * {\n    @include box-sizing(border-box);\n  }\n\n  #photo-sidebar {\n    height: 100vh;\n    padding: 5px 15px 5px 5px;\n    background: $sidebar-bg;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 10;\n    color: $white;\n    overflow: hidden; // required for perfect scrollbar\n\n    @include raised(2);\n    @include transition(width 0.5s ease);\n\n    input,\n    select {\n      width: 100%;\n      @include transition(width 0.5s ease);\n    }\n\n    &.open {\n      width: $sidebar-width;\n\n      & + .lid {\n        left: $sidebar-width;\n        visibility: hidden;\n        @include opacity(0);\n        @include transition-delay(0s, 0s, 0s);\n      }\n\n      #close-sidebar {\n        left: 17%; // fallback\n        @include experimental-value(left, calc(20% - 2em - 10px));\n        visibility: visible;\n        @include opacity(1);\n      }\n    }\n\n    &.closed {\n      width: 0;\n      padding: 0;\n      > * {\n        display: none;\n      }\n    }\n\n    & + .lid {\n      background: $sidebar-bg;\n      color: $white;\n      $width: 30px;\n      $height: 50px;\n\n      position: fixed;\n      left: 0;\n      top: 25vh;\n\n      width: $width;\n      height: $height;\n      margin-top: -$height/2;\n      padding-left: 3px;\n      overflow: hidden;\n      @include border-right-radius(5px);\n      @include raised(2);\n      @include transition(opacity 0.5s linear 0.5s, left 0.5s ease, visibility 0.5s linear 0.5s);\n\n      .fa {\n        line-height: $height;\n      }\n    }\n\n  }\n\n  .open-close {\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  #close-sidebar {\n    left: 0;\n    position: fixed;\n    top: 2px;\n    @include text-raised(1);\n    z-index: 11;\n    visibility: hidden;\n    @include opacity(0);\n\n    &:hover {\n      @include text-raised(2);\n    }\n  }\n\n  h2 {\n    color: $white;\n  }\n\n  #photo-list {\n    list-style: none;\n    margin: 0;\n\n    .album-photo {\n      position: relative;\n      margin: 5px 0;\n\n      a {\n        display: block;\n        max-width: 100%;\n        text-align: center;\n        background-color: rgba($white, 0.9);\n        @include raised(1);\n      }\n\n      img {\n        max-width: 100%;\n      }\n\n      figcaption {\n        display: block;\n        position: absolute;\n        top: 0;\n        left: 0;\n        padding: 2px 3px;\n        width: 100%;\n        @include text-shadow(0 0 3px $black);\n\n        &:hover {\n          padding: 2px 3px 4px;\n          @include background(rgba($black, 0.7));\n          @include raised(1);\n        }\n\n      }\n    }\n  }\n\n  .pagination > li > a > .fa {\n    line-height: inherit;\n  }\n\n}\n","@import \"shared\";\n\n// Provides cross-browser CSS opacity. Takes a number between 0 and 1 as the argument, e.g. 0.5 for 50% opacity.\n//\n//     @param $opacity\n//         A number between 0 and 1, where 0 is transparent and 1 is opaque.\n\n@mixin opacity($opacity) {\n  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 or $legacy-support-for-ie8 {\n    filter: unquote(\"progid:DXImageTransform.Microsoft.Alpha(Opacity=#{round($opacity * 100)})\");\n  }\n  opacity: $opacity;\n}\n\n// Make an element completely transparent.\n@mixin transparent { @include opacity(0); }\n\n// Make an element completely opaque.\n@mixin opaque { @include opacity(1); }\n","@import \"shared\";\n\n// These defaults make the arguments optional for this mixin\n// If you like, set different defaults in your project\n\n$default-text-shadow-color:    #aaa !default;\n$default-text-shadow-h-offset: 0px  !default;\n$default-text-shadow-v-offset: 0px  !default;\n$default-text-shadow-blur:     1px  !default;\n$default-text-shadow-spread:   false  !default;\n\n// Provides cross-browser text shadows when one or more shadows are needed.\n// Each shadow argument should adhere to the standard css3 syntax for the\n// text-shadow property.\n//\n// Note: if any shadow has a spread parameter, this will cause the mixin\n// to emit the shadow declaration twice, first without the spread,\n// then with the spread included. This allows you to progressively\n// enhance the browsers that do support the spread parameter.\n@mixin text-shadow(\n  $shadow-1 : default,\n  $shadow-2 : false,\n  $shadow-3 : false,\n  $shadow-4 : false,\n  $shadow-5 : false,\n  $shadow-6 : false,\n  $shadow-7 : false,\n  $shadow-8 : false,\n  $shadow-9 : false,\n  $shadow-10: false\n) {\n  @if $shadow-1 == default {\n    $shadow-1: compact($default-text-shadow-h-offset $default-text-shadow-v-offset $default-text-shadow-blur $default-text-shadow-spread $default-text-shadow-color);\n  }\n  $shadows-without-spread: join((),(),comma);\n  $shadows: join((),(),comma);\n  $has-spread: false;\n  @each $shadow in compact($shadow-1, $shadow-2, $shadow-3, $shadow-4, $shadow-5,\n                           $shadow-6, $shadow-7, $shadow-8, $shadow-9, $shadow-10) {\n    @if length($shadow) > 4 {\n      $has-spread: true;\n      $shadows-without-spread: append($shadows-without-spread, nth($shadow,1) nth($shadow,2) nth($shadow,3) nth($shadow,5));\n      $shadows: append($shadows, $shadow);\n    } else {\n      $shadows-without-spread: append($shadows-without-spread, $shadow);\n      $shadows: append($shadows, $shadow);\n    }\n  }\n  @if $has-spread {\n    text-shadow: $shadows-without-spread;\n  }\n  text-shadow: $shadows;\n}\n\n// Provides a single cross-browser CSS text shadow.\n//\n// Provides sensible defaults for the color, horizontal offset, vertical offset, blur, and spread\n// according to the configuration defaults above.\n@mixin single-text-shadow(\n  $hoff: false,\n  $voff: false,\n  $blur: false,\n  $spread: false,\n  $color: false\n) {\n  // A lot of people think the color comes first. It doesn't.\n  @if type-of($hoff) == color {\n    $temp-color: $hoff;\n    $hoff: $voff;\n    $voff: $blur;\n    $blur: $spread;\n    $spread: $color;\n    $color: $temp-color;\n  }\n  // Can't rely on default assignment with multiple supported argument orders.\n  $hoff:   if($hoff,   $hoff,   $default-text-shadow-h-offset);\n  $voff:   if($voff,   $voff,   $default-text-shadow-v-offset);\n  $blur:   if($blur,   $blur,   $default-text-shadow-blur    );\n  $spread: if($spread, $spread, $default-text-shadow-spread  );\n  $color:  if($color,  $color,  $default-text-shadow-color   );\n  // We don't need experimental support for this property.\n  @if $color == none or $hoff == none {\n    @include text-shadow(none);\n  } @else {\n    @include text-shadow(compact($hoff $voff $blur $spread $color));\n  }\n}\n","@import \"shared\";\n@import \"../utilities/general/hacks\";\n@import \"../functions\";\n\n// Background property support for vendor prefixing within values.\n@mixin background(\n  $background-1,\n  $background-2: false,\n  $background-3: false,\n  $background-4: false,\n  $background-5: false,\n  $background-6: false,\n  $background-7: false,\n  $background-8: false,\n  $background-9: false,\n  $background-10: false\n) {\n  $backgrounds: compact($background-1, $background-2, $background-3, $background-4, $background-5,\n                        $background-6, $background-7, $background-8, $background-9, $background-10);\n  $mult-bgs: -compass-list-size($backgrounds) > 1;\n  $add-pie-bg: prefixed(-pie,   $backgrounds) or $mult-bgs;\n  @if $experimental-support-for-svg          and prefixed(-svg,    $backgrounds) {      background:    -svg($backgrounds); }\n  @if $support-for-original-webkit-gradients and prefixed(-owg,    $backgrounds) {      background:    -owg($backgrounds); }\n  @if $experimental-support-for-webkit       and prefixed(-webkit, $backgrounds) {      background: -webkit($backgrounds); }\n  @if $experimental-support-for-mozilla      and prefixed(-moz,    $backgrounds) {      background:    -moz($backgrounds); }\n  @if $experimental-support-for-opera        and prefixed(-o,      $backgrounds) {      background:      -o($backgrounds); }\n  @if $experimental-support-for-pie          and $add-pie-bg                     { -pie-background:    -pie($backgrounds); }\n                                                                                        background:         $backgrounds ;\n}\n\n@mixin background-with-css2-fallback(\n  $background-1,\n  $background-2: false,\n  $background-3: false,\n  $background-4: false,\n  $background-5: false,\n  $background-6: false,\n  $background-7: false,\n  $background-8: false,\n  $background-9: false,\n  $background-10: false\n) {\n  $backgrounds: compact($background-1, $background-2, $background-3, $background-4, $background-5,\n                        $background-6, $background-7, $background-8, $background-9, $background-10);\n  $mult-bgs: -compass-list-size($backgrounds) > 1;\n  $simple-background: if($mult-bgs or prefixed(-css2, $backgrounds), -css2(-compass-nth($backgrounds, last)), false);\n  @if not(blank($simple-background)) { background: $simple-background; }\n  @include background($background-1, $background-2, $background-3, $background-4, $background-5,\n                      $background-6, $background-7, $background-8, $background-9, $background-10);\n}\n\n\n// Background image property support for vendor prefixing within values.\n@mixin background-image(\n  $image-1,\n  $image-2: false,\n  $image-3: false,\n  $image-4: false,\n  $image-5: false,\n  $image-6: false,\n  $image-7: false,\n  $image-8: false,\n  $image-9: false,\n  $image-10: false\n) {\n  $images: compact($image-1, $image-2, $image-3, $image-4, $image-5, $image-6, $image-7, $image-8, $image-9, $image-10);\n  $add-pie-bg: prefixed(-pie,   $images) or -compass-list-size($images) > 1;\n\n  @if $experimental-support-for-svg          and prefixed(-svg,    $images) { background-image:    -svg($images); background-size: 100%; }\n  @if $support-for-original-webkit-gradients and prefixed(-owg,    $images) { background-image:    -owg($images); }\n  @if $experimental-support-for-webkit       and prefixed(-webkit, $images) { background-image: -webkit($images); }\n  @if $experimental-support-for-mozilla      and prefixed(-moz,    $images) { background-image:    -moz($images); }\n  @if $experimental-support-for-opera        and prefixed(-o,      $images) { background-image:      -o($images); }\n  @if $experimental-support-for-pie          and $add-pie-bg                { @warn \"PIE does not support background-image. Use @include background(#{$images}) instead.\" }\n                                                                              background-image:         $images ;\n}\n\n// Emit a IE-Specific filters that renders a simple linear gradient.\n// For use in IE 6 - 8. Best practice would have you apply this via a\n// conditional IE stylesheet, but if you must, you should place this before\n// any background-image properties that you have specified.\n//\n// For the `$orientation` parameter, you can pass `vertical` or `horizontal`.\n@mixin filter-gradient($start-color, $end-color, $orientation: vertical) {\n  @include has-layout;\n  $gradient-type: if($orientation == vertical, 0, 1);\n  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 or $legacy-support-for-ie8 {\n    filter: progid:DXImageTransform.Microsoft.gradient(gradientType=#{$gradient-type}, startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}');\n  }\n}\n\n\n// Border image property support for vendor prefixing properties and values.\n@mixin border-image($value) {\n  @if $experimental-support-for-mozilla      {    -moz-border-image:    -moz(reject(-compass-list($value), fill)); }\n  @if $support-for-original-webkit-gradients { -webkit-border-image:    -owg(reject(-compass-list($value), fill)); }\n  @if $experimental-support-for-webkit       { -webkit-border-image: -webkit(reject(-compass-list($value), fill)); }\n  @if $experimental-support-for-opera        {      -o-border-image:      -o(reject(-compass-list($value), fill)); }\n  @if $experimental-support-for-svg          {         border-image:    -svg(reject(-compass-list($value), fill)); }\n                                                       border-image:                              $value;\n}\n\n// List style image property support for vendor prefixing within values.\n@mixin list-style-image($image) {\n  @if $experimental-support-for-mozilla      and prefixed(-moz,    $image) { list-style-image:    -moz($image); }\n  @if $support-for-original-webkit-gradients and prefixed(-owg,    $image) { list-style-image:    -owg($image); }\n  @if $experimental-support-for-webkit       and prefixed(-webkit, $image) { list-style-image: -webkit($image); }\n  @if $experimental-support-for-opera        and prefixed(-o,      $image) { list-style-image:      -o($image); }\n  @if $experimental-support-for-svg          and prefixed(-svg,    $image) { list-style-image:    -svg($image); }\n                                                                             list-style-image:         $image ;\n}\n\n// List style property support for vendor prefixing within values.\n@mixin list-style($value) {\n  $value: -compass-list($value);\n  @if $experimental-support-for-mozilla      and prefixed(-moz,    $value) { list-style-image:    -moz($value); }\n  @if $support-for-original-webkit-gradients and prefixed(-owg,    $value) { list-style-image:    -owg($value); }\n  @if $experimental-support-for-webkit       and prefixed(-webkit, $value) { list-style-image: -webkit($value); }\n  @if $experimental-support-for-opera        and prefixed(-o,      $value) { list-style-image:      -o($value); }\n  @if $experimental-support-for-svg          and prefixed(-svg,    $value) { list-style-image:    -svg($value); }\n                                                                             list-style-image:         $value ;\n}\n\n// content property support for vendor prefixing within values.\n@mixin content($value) {\n  $value: -compass-list($value);\n  @if $experimental-support-for-mozilla      and prefixed(-moz,    $value) { content:    -moz($value); }\n  @if $support-for-original-webkit-gradients and prefixed(-owg,    $value) { content:    -owg($value); }\n  @if $experimental-support-for-webkit       and prefixed(-webkit, $value) { content: -webkit($value); }\n  @if $experimental-support-for-opera        and prefixed(-o,      $value) { content:      -o($value); }\n  @if $experimental-support-for-svg          and prefixed(-svg,    $value) { content:    -svg($value); }\n                                                                             content:         $value ;\n}\n",".topic-controls {\n    a {\n        display: none;\n    }\n}\n","body.forum {\n\n  a.link-builds {\n\n    height: 18px;\n    overflow: visible;\n\n    & > span {\n      background: url('../images/icons/icon_builds.gif') no-repeat;\n      display: inline-block;\n      width: 70px;\n      height: 20px;\n    }\n  }\n\n}\n","div.gb-inset {\n  padding: 10px;\n  max-width: 1200px;\n\n  h2 {\n    color: $main-blue;\n\n    .status {\n      color: $main-grey;\n      font-size: 80%;\n    }\n  }\n\n  h4 {\n    margin-top: 10px;\n    color: $main-blue;\n  }\n\n  p.description {\n    margin-bottom: 5px;\n  }\n\n  .rules {\n    background-color: rgba($main-red, 0.2);\n    border: solid 2px $main-orange;\n  }\n  div.rules {\n    padding: 10px;\n  }\n  a.rules {\n    border-width: 1px;\n    padding: 0 10px;\n  }\n\n  table.tablebg {\n    min-width: 60%;\n    border-spacing: 1px;\n\n    td {\n      padding: 3px 5px;\n\n      &.num {\n        text-align: right;\n        width: 1%;\n      }\n\n      &.completed {\n        text-align: center;\n        width: 1%; // make it the minimum possible width\n        color: rgba($main-red, 0.8);\n\n        &:hover {\n          color: $main-red;\n        }\n\n        .fa-times:hover {\n          cursor: pointer;\n          @include text-raised(1);\n        }\n\n        &.finished, &.finished:hover {\n          color: $main-green;\n        }\n      }\n\n      &.brouwer {\n        color: $main-blue;\n        font-weight: bold;\n      }\n\n      &.model-name {\n        font-weight: bold;\n      }\n    }\n\n  }\n}\n"]}